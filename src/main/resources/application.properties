# ===============================
# PROFILE PARA AMBIENTE DE DESENVOLVIMENTO
# ===============================
#definicao de um profile de desenvolvimento
spring.profiles.active=dev


# -----------------------
# POSTGRESQL DATABASE CONFIGURATION
# -----------------------
spring.datasource.url=jdbc:postgresql://localhost:5432/av
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.dbcp2.driver-class-name=org.postgresql.Driver

# ===============================
# = JPA / HIBERNATE
# ===============================

# Dica intrucao para hibernate de como gerenciar o schema
spring.jpa.hibernate.ddl-auto=none
# Dica exibe os comandos SQL
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.type = trace
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true


# ===============================
# = Flyway
# ===============================
# Dica desabilita o Flyway migration
flyway.enabled=true

# ===============================
# = CONFIGURACOES GERAIS DO PROJETO
# ===============================


# ===============================
# = CONFIGURACOES SEGURANÇA E TOKEN JWT
# ===============================
# Dica: security.basic.enabled -> Por Padrao ao adcionar as dependencias do spring security
# o spring boot habilita a autenticacao para o acesso aos servicos via token. como temos solucao propria
# nao existe a necessidade de deixar habilitado
security.basic.enabled=false 

# JWT - senha da assinatura digital do token - O token sera assinado com a chave abaixo. 
# E somente quem tem essa chave ira ira conseguir validar seu token
jwt.secret=@vELIn0_P&nA
# tempo de vida do Token
jwt.expiration=604800

